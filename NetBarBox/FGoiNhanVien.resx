<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /o0qLjAXXfT/TNzNY1NPzJEAAAAASUVORK5CYII=
</value>
  </data>
</root>